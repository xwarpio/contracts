/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IMasterChef",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMasterChef__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IXWARPCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXWARPCallee__factory>;
    getContractFactory(
      name: "IXWARPERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXWARPERC20__factory>;
    getContractFactory(
      name: "IXWARPFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXWARPFactory__factory>;
    getContractFactory(
      name: "IXWARPPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXWARPPair__factory>;
    getContractFactory(
      name: "IXWARPRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXWARPRouter01__factory>;
    getContractFactory(
      name: "IXWARPRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IXWARPRouter02__factory>;
    getContractFactory(
      name: "WXPT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WXPT__factory>;
    getContractFactory(
      name: "MasterChef",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MasterChef__factory>;
    getContractFactory(
      name: "Multicall2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall2__factory>;
    getContractFactory(
      name: "SXWARPBar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SXWARPBar__factory>;
    getContractFactory(
      name: "XWARPERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XWARPERC20__factory>;
    getContractFactory(
      name: "XWARPFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XWARPFactory__factory>;
    getContractFactory(
      name: "XWARPPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XWARPPair__factory>;
    getContractFactory(
      name: "XWARPRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XWARPRouter__factory>;
    getContractFactory(
      name: "XWARPToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XWARPToken__factory>;

    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IMasterChef",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMasterChef>;
    getContractAt(
      name: "IWETH",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IXWARPCallee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXWARPCallee>;
    getContractAt(
      name: "IXWARPERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXWARPERC20>;
    getContractAt(
      name: "IXWARPFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXWARPFactory>;
    getContractAt(
      name: "IXWARPPair",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXWARPPair>;
    getContractAt(
      name: "IXWARPRouter01",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXWARPRouter01>;
    getContractAt(
      name: "IXWARPRouter02",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IXWARPRouter02>;
    getContractAt(
      name: "WXPT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WXPT>;
    getContractAt(
      name: "MasterChef",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MasterChef>;
    getContractAt(
      name: "Multicall2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall2>;
    getContractAt(
      name: "SXWARPBar",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SXWARPBar>;
    getContractAt(
      name: "XWARPERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XWARPERC20>;
    getContractAt(
      name: "XWARPFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XWARPFactory>;
    getContractAt(
      name: "XWARPPair",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XWARPPair>;
    getContractAt(
      name: "XWARPRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XWARPRouter>;
    getContractAt(
      name: "XWARPToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.XWARPToken>;

    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IMasterChef",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMasterChef>;
    deployContract(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWETH>;
    deployContract(
      name: "IXWARPCallee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPCallee>;
    deployContract(
      name: "IXWARPERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPERC20>;
    deployContract(
      name: "IXWARPFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPFactory>;
    deployContract(
      name: "IXWARPPair",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPPair>;
    deployContract(
      name: "IXWARPRouter01",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPRouter01>;
    deployContract(
      name: "IXWARPRouter02",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPRouter02>;
    deployContract(
      name: "WXPT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WXPT>;
    deployContract(
      name: "MasterChef",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MasterChef>;
    deployContract(
      name: "Multicall2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall2>;
    deployContract(
      name: "SXWARPBar",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SXWARPBar>;
    deployContract(
      name: "XWARPERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPERC20>;
    deployContract(
      name: "XWARPFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPFactory>;
    deployContract(
      name: "XWARPPair",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPPair>;
    deployContract(
      name: "XWARPRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPRouter>;
    deployContract(
      name: "XWARPToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPToken>;

    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IMasterChef",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMasterChef>;
    deployContract(
      name: "IWETH",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWETH>;
    deployContract(
      name: "IXWARPCallee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPCallee>;
    deployContract(
      name: "IXWARPERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPERC20>;
    deployContract(
      name: "IXWARPFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPFactory>;
    deployContract(
      name: "IXWARPPair",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPPair>;
    deployContract(
      name: "IXWARPRouter01",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPRouter01>;
    deployContract(
      name: "IXWARPRouter02",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IXWARPRouter02>;
    deployContract(
      name: "WXPT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WXPT>;
    deployContract(
      name: "MasterChef",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MasterChef>;
    deployContract(
      name: "Multicall2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multicall2>;
    deployContract(
      name: "SXWARPBar",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SXWARPBar>;
    deployContract(
      name: "XWARPERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPERC20>;
    deployContract(
      name: "XWARPFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPFactory>;
    deployContract(
      name: "XWARPPair",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPPair>;
    deployContract(
      name: "XWARPRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPRouter>;
    deployContract(
      name: "XWARPToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.XWARPToken>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
